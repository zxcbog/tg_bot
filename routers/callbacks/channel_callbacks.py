from aiogram import Router
from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram import html
from aiogram import F
from utils import db

router = Router()

update_accept_field_query = ""


@router.callback_query(F.data.startswith("new_order_action"))
async def new_order_action(query: types.CallbackQuery, state: FSMContext):
    action_res = query.data.split("-", 1)[1]
    action_res, raw_ids = action_res.split("#", 1)
    order_id, user_id = map(int, raw_ids.split(','))
    order_info = (await db.tasks_handler(f"SELECT * FROM orders WHERE order_id={order_id}"))[0]
    order_accept_field_query = f"DELETE FROM orders WHERE order_id={order_id}"
    if action_res == "yes":
        await query.message.reply(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {html.bold(query.from_user.full_name)} –ø—Ä–∏–Ω—è–ª –∑–∞—è–≤–∫—É")
        await query.bot.send_message(chat_id=user_id, 
                                     text=f"–í–∞—à –∑–∞–∫–∞–∑: {html.bold(order_info['loading_datetime'])}; {html.bold(order_info['sending_city'])} -> {html.bold(order_info['delivery_city'])}: {html.bold(order_info['loading_address'])} –±—ã–ª –ø—Ä–∏–Ω—è—Ç!\n"
                                           "–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. üìû")
        await db.tasks_handler(order_accept_field_query)
    else:
        await query.message.reply(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {html.bold(query.from_user.full_name)} –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞—è–≤–∫—É")
    await query.message.edit_reply_markup(reply_markup=None)